(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     39074,        889]
NotebookOptionsPosition[     35126,        825]
NotebookOutlinePosition[     35561,        842]
CellTagsIndexPosition[     35518,        839]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Section",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.95613880755435*^9, 
  3.95613881060198*^9}},ExpressionUUID->"270ebaa9-ca01-8749-bc5c-\
b9098f22d531"],

Cell[TextData[{
 "Run these at the beginning of your session. \[LineSeparator]The first one \
reduces your memory use (\[OpenCurlyQuote]",
 StyleBox["Mathematica is a RAM-monster",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote] is a myth.)\nThe second one lets you keep track of the \
directory of your notebook and paths then can be used in reference to that."
}], "Text",
 CellChangeTimes->{{3.9561388291506157`*^9, 3.95613893722488*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1e595848-388f-374d-b884-638c37fd979c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookDirectory", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.9545508971005974`*^9, 3.9545509224200745`*^9}},
 CellLabel->
  "5/13/25 18:04:18 \
In[1]:=",ExpressionUUID->"3bcbb28a-7a26-7a42-a0d4-5891a63cb0ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mistral", "Section",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}},ExpressionUUID->"d7297396-9ecd-9c46-b429-\
b946319a2fb1"],

Cell["\<\
These are the paths to your scripts. If you keep them in the same directory \
as this Notebook, just run the following cell.\[LineSeparator]If you are \
confident/mad, give your own paths.\
\>", "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.9561390701349792`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"84aeeb6e-204c-4840-b1e9-83d11c850eb5"],

Cell[BoxData[{
 RowBox[{"$scriptPathMD", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], 
     ",", "\"\<script_OCR_Mistral_py2md.py\>\""}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$scriptPathJSON", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], 
     ",", "\"\<script_OCR_Mistral_py2JSON.py\>\""}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$scriptPath", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], 
     ",", "\"\<script_OCR_Mistral.py\>\""}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9546946389677944`*^9, 3.954694694448488*^9}, {
  3.9546969497103767`*^9, 3.9546969604861317`*^9}, {3.9546973026228504`*^9, 
  3.9546973123159695`*^9}, {3.954807384560478*^9, 3.954807391064026*^9}},
 CellLabel->
  "5/13/25 18:04:21 \
In[3]:=",ExpressionUUID->"b01f29f9-04bc-f349-904d-807fee2d753b"],

Cell["\<\
No need to open/edit the following subsection, unless, again, you are mad.\
\>", "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"79602380-adcf-bc46-bbb3-3d6ec0ae7187"],

Cell[CellGroupData[{

Cell["Scripts and Functions", "Subsection",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.9547014242155857`*^9, 
  3.9547014395158997`*^9}},ExpressionUUID->"c393de9a-d6ce-784d-902c-\
d9bbc9120977"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"mistralOCR", ",", "mistralOCRSysCom"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "mistralOCR", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<OutType\>\"", "->", "\"\<Auto\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mistralOCR", "[", 
    RowBox[{"process_", ",", "fileName_", ",", 
     RowBox[{"outFileBaseName_", ":", "Automatic"}], ",", "sourceDir_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"scrptPath", "=", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
          ",", "\"\<MarkDown\>\"", ",", "$scriptPathMD", ",", "\"\<JSON\>\"", 
          ",", "$scriptPathJSON", ",", "\"\<Auto\>\"", ",", "$scriptPath"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"pdfPath", "=", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"sourceDir", ",", "fileName"}], "}"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"outFileBaseName", "===", "Automatic"}], ",", 
          RowBox[{"FileBaseName", "[", "fileName", "]"}], ",", 
          "outFileBaseName"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "jsonPath", ",", "mdPath", ",", "outPath"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         "===", "\"\<Auto\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"FileExistsQ", "[", 
             RowBox[{"FileNameJoin", "[", 
              RowBox[{"{", 
               RowBox[{"$pdfDir1", ",", "\"\<JSON\>\""}], "}"}], "]"}], 
             "]"}]}], ",", 
           RowBox[{"CreateDirectory", "[", 
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"{", 
              RowBox[{"$pdfDir1", ",", "\"\<JSON\>\""}], "}"}], "]"}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"FileExistsQ", "[", 
             RowBox[{"FileNameJoin", "[", 
              RowBox[{"{", 
               RowBox[{"$pdfDir1", ",", "\"\<MarkDown\>\""}], "}"}], "]"}], 
             "]"}]}], ",", 
           RowBox[{"CreateDirectory", "[", 
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"{", 
              RowBox[{"$pdfDir1", ",", "\"\<MarkDown\>\""}], "}"}], "]"}], 
            "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"FileExistsQ", "[", 
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"{", 
              RowBox[{"$pdfDir1", ",", 
               RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}]}], "}"}], 
             "]"}], "]"}]}], ",", 
          RowBox[{"CreateDirectory", "[", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"$pdfDir1", ",", 
              RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}]}], "}"}], 
            "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jsonPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"sourceDir", ",", "\"\<JSON\>\"", ",", 
          RowBox[{"outName", "<>", "\"\<.json\>\""}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mdPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"sourceDir", ",", "\"\<MarkDown\>\"", ",", 
          RowBox[{"outName", "<>", "\"\<.md\>\""}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outPath", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         ",", "\"\<Auto\>\"", ",", 
         RowBox[{"jsonPath", "<>", "\"\<\\\" \\\"\>\"", "<>", "mdPath"}], 
         ",", "\"\<JSON\>\"", ",", "jsonPath", ",", "\"\<MarkDown\>\"", ",", 
         "mdPath"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", "pdfPath", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           
           RowBox[{"\"\<The file \\'``\\' does not esist.\>\"", ",", 
            "fileName"}], "]"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         "==", "\"\<Auto\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "jsonPath", "]"}], ",", 
           RowBox[{"DeleteFile", "[", "jsonPath", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "mdPath", "]"}], ",", 
           RowBox[{"DeleteFile", "[", "mdPath", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", "outPath", "]"}], ",", 
          RowBox[{"DeleteFile", "[", "outPath", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"process", ",", 
        RowBox[{"\"\<python.exe \\\"\>\"", "<>", "scrptPath", 
         "<>", "\"\<\\\" \\\"\>\"", "<>", "pdfPath", "<>", "\"\<\\\" \\\"\>\"",
          "<>", "outPath", "<>", "\"\<\\\"\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         "==", "\"\<Auto\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Until", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FileExistsQ", "[", "jsonPath", "]"}], "&&", 
           RowBox[{"FileExistsQ", "[", "mdPath", "]"}]}], ",", 
          RowBox[{"Pause", "[", "0.01", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Until", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", "outPath", "]"}], ",", 
          RowBox[{"Pause", "[", "0.01", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         "==", "\"\<Auto\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`1`.md and `1`.json files is created.\>\"", ",", 
           RowBox[{"FileBaseName", "[", "fileName", "]"}]}], "]"}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
           RowBox[{"\"\<`1`.\>\"", "<>", 
            RowBox[{"FileExtension", "[", "outPath", "]"}], 
            "<>", "\"\< is created.\>\""}], ",", 
           RowBox[{"FileBaseName", "[", "fileName", "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "mistralOCRSysCom", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<OutType\>\"", "->", "\"\<Auto\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mistralOCRSysCom", "[", 
   RowBox[{"process_", ",", "fileName_", ",", 
    RowBox[{"outFileBaseName_", ":", "Automatic"}], ",", "sourceDir_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"scrptPath", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
         ",", "\"\<MarkDown\>\"", ",", "$scriptPathMD", ",", "\"\<JSON\>\"", ",",
          "$scriptPathJSON", ",", "\"\<Auto\>\"", ",", "$scriptPath"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"pdfPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"sourceDir", ",", "fileName"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"outName", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"outFileBaseName", "===", "Automatic"}], ",", 
         RowBox[{"FileBaseName", "[", "fileName", "]"}], ",", 
         "outFileBaseName"}], "]"}]}], ",", "\[IndentingNewLine]", "jsonPath",
       ",", "mdPath", ",", "outPath"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jsonPath", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"sourceDir", ",", "\"\<JSON\>\"", ",", 
         RowBox[{"outName", "<>", "\"\<.json\>\""}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mdPath", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"sourceDir", ",", "\"\<MarkDown\>\"", ",", 
         RowBox[{"outName", "<>", "\"\<.md\>\""}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"outPath", "=", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<OutType\>\"", "]"}], 
        ",", "\"\<Auto\>\"", ",", 
        RowBox[{"jsonPath", "<>", "\"\<\\\" \\\"\>\"", "<>", "mdPath"}], 
        ",", "\"\<JSON\>\"", ",", "jsonPath", ",", "\"\<MarkDown\>\"", ",", 
        "mdPath"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<python.exe \\\"\>\"", "<>", "scrptPath", 
      "<>", "\"\<\\\" \\\"\>\"", "<>", "pdfPath", "<>", "\"\<\\\" \\\"\>\"", "<>",
       "outPath", "<>", "\"\<\\\"\>\""}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9546950903026085`*^9, 3.954695165692087*^9}, {
   3.9546952385552006`*^9, 3.9546955539790726`*^9}, {3.954695617704195*^9, 
   3.9546958056316967`*^9}, {3.9546959194869175`*^9, 3.954696267212513*^9}, {
   3.954696746959177*^9, 3.9546967537700024`*^9}, {3.9546969141267567`*^9, 
   3.9546969372743816`*^9}, {3.9546970043654995`*^9, 3.954697108924528*^9}, {
   3.954697264382065*^9, 3.9546972911402836`*^9}, {3.954697321850666*^9, 
   3.9546973286632195`*^9}, {3.9546974695641823`*^9, 3.954697472294098*^9}, {
   3.954697774281992*^9, 3.9546977879359074`*^9}, {3.9546979820715218`*^9, 
   3.954698041027128*^9}, {3.9546991229450893`*^9, 3.9546991272906017`*^9}, {
   3.9546992164766808`*^9, 3.9546992769040375`*^9}, {3.954699311004032*^9, 
   3.954699343020708*^9}, {3.954699414554096*^9, 3.954699560243532*^9}, {
   3.954699786849001*^9, 3.95469979984807*^9}, {3.95469988697612*^9, 
   3.954699945811407*^9}, {3.954699984487671*^9, 3.954700009650652*^9}, {
   3.954701065955736*^9, 3.9547011166724014`*^9}, {3.954725330363945*^9, 
   3.9547253531927624`*^9}, {3.9547272509754887`*^9, 3.954727298119808*^9}, {
   3.9547273322857533`*^9, 3.9547273388114605`*^9}, {3.9547301065409927`*^9, 
   3.954730115182844*^9}, {3.954761355498064*^9, 3.954761424264086*^9}, {
   3.9548080619836082`*^9, 3.9548081289503727`*^9}, {3.9548081708620358`*^9, 
   3.9548082767711315`*^9}, {3.9548083090877857`*^9, 
   3.9548086283848896`*^9}, {3.9548087340912952`*^9, 3.954808772948023*^9}, {
   3.9548088428807697`*^9, 3.9548090517279243`*^9}, {3.954809082896076*^9, 
   3.9548092147092876`*^9}, {3.9548093143172607`*^9, 3.954809318109625*^9}, {
   3.954809424516388*^9, 3.9548094743558655`*^9}, {3.9548095372411785`*^9, 
   3.954809542174734*^9}, {3.954809634186878*^9, 3.9548096414188766`*^9}, {
   3.956137783299921*^9, 3.9561379664849453`*^9}, 3.9561380550003643`*^9},
 CellLabel->
  "5/13/25 20:44:17 \
In[28]:=",ExpressionUUID->"4643f6aa-3202-6547-819c-6768ae3b28ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["Files and Folders", "Subsection",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.9547014242155857`*^9, 
  3.9547014611497765`*^9}},ExpressionUUID->"3f7ddf40-e4c2-a044-9576-\
20d81aab1bea"],

Cell[TextData[{
 StyleBox["Replace the path to the directory where the PDF file(s) is(are).",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "\[LineSeparator]Remember, just the path to the directory, not the file path."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
   3.9561391743366547`*^9, 3.956139234447109*^9}, 3.9561426263638897`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"617719f1-e963-6c46-9c7d-6cc2bf7a9528"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$pdfDir1", 
   "=", "\"\<H:\\\\My Drive\\\\GuruChandali\\\\OCR_Books\\\\Abyakta\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9553744641429462`*^9, 3.9553744757583942`*^9}, 
   3.956137528389372*^9},
 CellLabel->
  "5/13/25 20:35:37 \
In[19]:=",ExpressionUUID->"fb07aba8-e84f-3347-a55d-6fd9ebf5f6c4"],

Cell[TextData[{
 "This following code lists all the PDFs in that folder. You can use all of \
them as the \[OpenCurlyQuote]",
 StyleBox["files", "Input"],
 "\[CloseCurlyQuote]---as shown below---or you can choose only one of those \
(as shown in the \[OpenCurlyQuote]",
 StyleBox["flnm1", "Input"],
 "\[CloseCurlyQuote] symbol)."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
  3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
  3.956139382237385*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"caa74d4b-73e6-9c4b-bcaf-4c97d3482aef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNames", "[", 
   RowBox[{"\"\<*.pdf\>\"", ",", "$pdfDir1"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",ExpressionUUID->"de89d10c-f6a9-\
064b-941c-f70305473a1f"],

Cell[BoxData[
 RowBox[{"files1", "=", 
  RowBox[{"FileNames", "[", 
   RowBox[{"\"\<*.pdf\>\"", ",", "$pdfDir1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9547005417751465`*^9, 3.954700543569393*^9}, {
   3.9547005894081306`*^9, 3.954700645088024*^9}, {3.9547006848388424`*^9, 
   3.9547006968626137`*^9}, {3.9547007992050343`*^9, 3.954700845614647*^9}, {
   3.9547008974384613`*^9, 3.9547009023856297`*^9}, 3.954700950126459*^9, 
   3.9547013792234726`*^9, {3.954726209418293*^9, 3.954726215489292*^9}, {
   3.9547271058922405`*^9, 3.954727111657484*^9}, 3.9547634478006115`*^9, {
   3.9548066025337543`*^9, 3.954806627102127*^9}, {3.9548198998722744`*^9, 
   3.95481992375515*^9}, {3.954820257311718*^9, 3.9548203310218143`*^9}, {
   3.954821284224119*^9, 3.9548212846284866`*^9}, {3.954858792505234*^9, 
   3.9548587959730988`*^9}, {3.956139323790415*^9, 
   3.9561393299610176`*^9}},ExpressionUUID->"a4cfb45e-c4b6-8a41-ac8c-\
3e7a6020bd36"],

Cell[BoxData[
 RowBox[{"flnm1", "=", 
  RowBox[{
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.pdf\>\"", ",", "$pdfDir1"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], 
  RowBox[{
  "(*", "\"\<H:\\\\My \
Drive\\\\MaterialForRokeya\\\\Modules_NEET_Old\\\\Biology\\\\Akash_NEET_2022_\
Zoo_Unit_1_Retake.pdf\>\"", "*)"}]}]], "Input",
 CellChangeTimes->{{3.9547614689840355`*^9, 3.954761487551529*^9}, {
   3.9548148037055607`*^9, 3.954814805117298*^9}, 3.9548217458752594`*^9, {
   3.956128482409588*^9, 3.9561284856937466`*^9}},
 CellLabel->
  "5/13/25 20:35:40 \
In[20]:=",ExpressionUUID->"1586aa82-e57e-8049-9b8b-f52e384635a8"],

Cell[TextData[{
 "These are just some examples for you to able to play with paths and \
FileNames... \[LineSeparator]",
 StyleBox["You can happily skip these",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
  3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
  3.956139382237385*^9}, {3.9561394185837746`*^9, 3.9561394616357384`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a0a35d88-5fef-2c42-bc4d-9d7008e51e44"],

Cell[BoxData[{
 RowBox[{"FileBaseName", "[", "flnm1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"DirectoryName", "[", "flnm1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "==", "$pdfDir1"}]}], "Input",
 CellChangeTimes->{{3.9546948227660313`*^9, 3.9546948874985294`*^9}, {
  3.954700971038269*^9, 3.954700973405117*^9}, {3.9561394990486717`*^9, 
  3.956139507090767*^9}},ExpressionUUID->"e0d3eae5-fe35-884c-9ebf-\
b6389140c34a"],

Cell[BoxData[{
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{"$pdfDir1", ",", 
    RowBox[{
     RowBox[{"FileBaseName", "[", 
      RowBox[{"files1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<.pdf\>\""}]}], "}"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DirectoryName", "[", 
     RowBox[{"files1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"FileBaseName", "[", 
      RowBox[{"files1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<.pdf\>\""}]}], "}"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "==", "%%"}]}], "Input",
 CellChangeTimes->{{3.9546949156673927`*^9, 3.954694952277235*^9}, {
  3.954701001571518*^9, 3.954701007495409*^9}, {3.954726236653324*^9, 
  3.954726239684326*^9}},
 CellLabel->
  "4/27/25 12:48:39 \
In[36]:=",ExpressionUUID->"7e9c7dd9-edc8-0742-a8dc-4e15e7c11fbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Open Process", "Subsection",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.9547014242155857`*^9, 3.954701481765457*^9}, {
  3.95472626385042*^9, 3.954726265879421*^9}, {3.956139550746073*^9, 
  3.9561395609280224`*^9}},ExpressionUUID->"8cadafce-d42a-cf46-9898-\
2a2fbdd2b657"],

Cell[TextData[{
 "The following piece of code opens a terminal in the backend for you. You \
won\[CloseCurlyQuote]t be able to see it (there are ways to do that too, \
though), but all work will be done there.\[LineSeparator]If you are in ",
 StyleBox["Windows",
  FontWeight->"Bold"],
 ", please work in the ",
 StyleBox["PowerShell",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " environment (install ",
 StyleBox["PowerShell",
  FontSlant->"Italic"],
 "---if you don\[CloseCurlyQuote]t have it---then run the command as it is).\n\
If you are in ",
 StyleBox["Linux / MacOS",
  FontWeight->"Bold"],
 ", comment-out the code that\[CloseCurlyQuote]s in bold, comment-in the code \
within ",
 StyleBox["(* *)", "Input"],
 " (anything within those are commented-out in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ") then run the command."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
  3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
  3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
  3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
  3.9561400222455177`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"db6f04fb-1940-6743-bc64-03e7b7262b58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ocrProc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ocrProc", "=", 
   RowBox[{"StartProcess", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"$SystemShell", "<>", "\"\<.exe\>\""}], 
      ",", "\"\<powershell.exe\>\""}], "}"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"StartProcess", "[", "$SystemShell", "]"}], "*)"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.95469501999527*^9, 3.954695033457014*^9}, 
   3.9546971224430103`*^9, {3.954697575725748*^9, 3.954697591358135*^9}, 
   3.954697634989887*^9, {3.954699569376793*^9, 3.954699572701578*^9}},
 CellLabel->
  "5/13/25 18:04:57 \
In[14]:=",ExpressionUUID->"fe1b7bc5-0d10-b343-a0a0-21f981cb0055"],

Cell[TextData[{
 "Check if the terminal is running. If it is, then the output of the \
following cell would be \[OpenCurlyQuote]",
 StyleBox["Running", "Output"],
 "\[CloseCurlyQuote]."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
  3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
  3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
  3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
  3.9561400222455177`*^9}, {3.956140064293827*^9, 3.956140103135172*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"efd63cd2-e38c-a249-bfe4-596389d64b81"],

Cell[BoxData[
 RowBox[{"ProcessStatus", "[", "ocrProc", "]"}]], "Input",
 CellChangeTimes->{3.954761629733206*^9},
 CellLabel->
  "5/13/25 20:44:29 \
In[33]:=",ExpressionUUID->"7e0a77d3-a63f-204d-b207-b4ef62b9e667"],

Cell[CellGroupData[{

Cell["Single File", "Subsubsection",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.9547014242155857`*^9, 3.954701514319599*^9}, {
  3.9547015447311745`*^9, 3.9547015616585846`*^9}, {3.9561401085416565`*^9, 
  3.956140119092211*^9}},ExpressionUUID->"cab5d8ad-05ea-404e-b10f-\
4be77c319fcd"],

Cell[TextData[{
 "This following code does the OCR job for you. It takes a few minutes to \
finish, depending on the file size and your internet connection.\
\[LineSeparator]It has the following usage:\n\n",
 StyleBox["mistralOCR[ terminal_process_name, just_the_file_Name, \
output_file_name, pdf_directory, \[OpenCurlyDoubleQuote]OutType\
\[CloseCurlyDoubleQuote]\[Rule] output_type ]", "Input"],
 "\n\nIf the ",
 StyleBox["pdf_directory", "Input"],
 " is set to ",
 StyleBox["Automatic", "Input"],
 ", the output file name would be same as the input one.\n\nThere are three \
possible values for ",
 StyleBox["\[OpenCurlyDoubleQuote]OutType\[CloseCurlyDoubleQuote]", "Input"],
 ": ",
 StyleBox["\[OpenCurlyDoubleQuote]JSON\[CloseCurlyDoubleQuote]", "Output"],
 ", ",
 StyleBox["\[OpenCurlyDoubleQuote]MarkDown\[CloseCurlyDoubleQuote]", "Output"],
 ", and ",
 StyleBox["\[OpenCurlyDoubleQuote]Auto\[CloseCurlyDoubleQuote]", "Output"],
 ".\[LineSeparator]\t",
 StyleBox["\[OpenCurlyDoubleQuote]JSON\[CloseCurlyDoubleQuote]", "Input"],
 " :  Creates a folder named \[OpenCurlyDoubleQuote]JSON\
\[CloseCurlyDoubleQuote] and then puts the OCR result in that directory as a ",
 StyleBox["\[OpenCurlyQuote].json\[CloseCurlyQuote]", "Code"],
 " file.\[LineSeparator]\t",
 StyleBox["\[OpenCurlyDoubleQuote]JSON\[CloseCurlyDoubleQuote]", "Input"],
 " :  Creates a folder named \[OpenCurlyDoubleQuote]MarkDown\
\[CloseCurlyDoubleQuote] and then puts the OCR result in that directory as a ",
 StyleBox["\[OpenCurlyQuote].md\[CloseCurlyQuote]", "Code"],
 " file.\n\t",
 StyleBox["\[OpenCurlyDoubleQuote]Auto\[CloseCurlyDoubleQuote]", "Input"],
 " :  Creates both types of files. \[LineSeparator]\[LineSeparator]If you \
skip the option like this: \n\t",
 StyleBox["mistralOCR[ terminal_process_name, just_the_file_Name, \
output_file_name, pdf_directory ]", "Input"],
 ", \n\tyour default output option will be ",
 StyleBox["\[OpenCurlyDoubleQuote]Auto\[CloseCurlyDoubleQuote]", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
  3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
  3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
  3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
  3.9561400222455177`*^9}, {3.956140064293827*^9, 3.9561401387190876`*^9}, {
  3.9561401700379467`*^9, 3.956140326669159*^9}, {3.9561403597890396`*^9, 
  3.956140403667858*^9}, {3.9561406488795357`*^9, 3.95614081466329*^9}, {
  3.956142023801359*^9, 3.95614217553434*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"cb24c219-67aa-fd42-a76a-6013d4888849"],

Cell[BoxData[
 RowBox[{"mistralOCR", "[", 
  RowBox[{"ocrProc", ",", 
   RowBox[{"FileNameTake", "[", "flnm1", "]"}], ",", "Automatic", ",", 
   "$pdfDir1", ",", 
   RowBox[{"\"\<OutType\>\"", "->", "\"\<JSON\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9547276724087048`*^9, 3.954761515280657*^9, {3.954809796613207*^9, 
   3.95480979920121*^9}},ExpressionUUID->"c4f902a7-37f3-3f4a-a4a6-\
6be14886ed3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mistralOCR", "[", 
   RowBox[{"ocrProc", ",", 
    RowBox[{"FileNameTake", "[", "flnm1", "]"}], ",", "Automatic", ",", 
    "$pdfDir1"}], "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.9547276724087048`*^9, 3.954761515280657*^9, {3.954809796613207*^9, 
   3.95480979920121*^9}, {3.956142194007221*^9, 
   3.9561422062483196`*^9}},ExpressionUUID->"487e044b-c73a-b941-a2c1-\
92d0ca10cdd4"],

Cell[TextData[{
 "The second cell above has an ",
 StyleBox["AbsoluteTiming", "Code"],
 " applied on it. It will show the time it takes to run the whole code.\nIf \
you are afraid to run Mistral directly from the terminal, the following code \
will give you the necessary code...\[LineSeparator]just copy it as plain text \
(use options) and paste it in the terminal before pressing ",
 StyleBox["Enter",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
   3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
   3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
   3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
   3.9561400222455177`*^9}, {3.956140064293827*^9, 3.9561401387190876`*^9}, {
   3.9561401700379467`*^9, 3.956140326669159*^9}, {3.9561403597890396`*^9, 
   3.956140403667858*^9}, {3.9561406488795357`*^9, 3.95614081466329*^9}, 
   3.956141206493147*^9, {3.9561422115348396`*^9, 3.9561423754587784`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"8431bd3a-b186-0840-8c58-7954600d913d"],

Cell[BoxData[
 RowBox[{"mistralOCRSysCom", "[", 
  RowBox[{"ocrProc", ",", 
   RowBox[{"FileNameTake", "[", "flnm1", "]"}], ",", "Automatic", ",", 
   "$pdfDir1", ",", 
   RowBox[{"\"\<OutType\>\"", "->", "\"\<Auto\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.95480923313266*^9, 3.9548092404245625`*^9}, {
   3.954809399185854*^9, 3.954809401870825*^9}, {3.954814821089945*^9, 
   3.954814825170042*^9}, {3.9553747985524826`*^9, 3.955374802670622*^9}, {
   3.956128518357113*^9, 3.9561285207785053`*^9}, 
   3.956140147403303*^9},ExpressionUUID->"aec10fc5-7b44-474a-891b-\
3f9ec16d6ae1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiple Files", "Subsubsection",
 CellChangeTimes->{{3.9546326499192905`*^9, 3.9546326569575977`*^9}, {
  3.954632699274126*^9, 3.9546327133258953`*^9}, {3.95469449058873*^9, 
  3.954694491825279*^9}, {3.9547014242155857`*^9, 3.954701514319599*^9}, {
  3.9547015447311745`*^9, 3.9547015616585846`*^9}, {3.954806649109991*^9, 
  3.9548066498081303`*^9}, {3.956142389815668*^9, 
  3.9561423966042366`*^9}},ExpressionUUID->"a6b3955b-9ce9-bd46-8be9-\
db83204641e1"],

Cell[TextData[{
 "This is ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 " the ",
 StyleBox["Batch OCR",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " functionality available from ",
 StyleBox["Mistral",
  FontSlant->"Italic"],
 ".\nThis just uses Mathematica functionality to send all PDF files in a \
specific directory to Mistral in a loop."
}], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
   3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
   3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
   3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
   3.9561400222455177`*^9}, {3.956140064293827*^9, 3.9561401387190876`*^9}, {
   3.9561401700379467`*^9, 3.956140326669159*^9}, {3.9561403597890396`*^9, 
   3.956140403667858*^9}, {3.9561406488795357`*^9, 3.95614081466329*^9}, 
   3.956141206493147*^9, {3.9561422115348396`*^9, 3.9561424946926136`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"20917eaf-94b2-da41-b638-dc106d8d5dc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MonitorProgress\>\"", "]"}], "[", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"mistralOCR", "[", 
       RowBox[{"ocrProc", ",", 
        RowBox[{"FileNameTake", "[", "#", "]"}], ",", "Automatic", ",", 
        "$pdfDir1"}], "]"}], "&"}], "/@", "files1"}], "\[IndentingNewLine]", 
    "]"}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{
  3.9548096851789207`*^9, {3.9548201491401577`*^9, 3.9548201576758327`*^9}, 
   3.954820206194916*^9, 3.954821349610733*^9, {3.954858999606573*^9, 
   3.954859005293709*^9}, {3.956142499500717*^9, 
   3.956142511326124*^9}},ExpressionUUID->"1617e6a4-3af9-ec4f-91d9-\
b1d9b72fc60e"],

Cell["\<\
When you are done / if nothing works (happens at times), this will kill the \
backend-terminal process.\
\>", "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
   3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
   3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
   3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
   3.9561400222455177`*^9}, {3.956140064293827*^9, 3.9561401387190876`*^9}, {
   3.9561401700379467`*^9, 3.956140326669159*^9}, {3.9561403597890396`*^9, 
   3.956140403667858*^9}, {3.9561406488795357`*^9, 3.95614081466329*^9}, 
   3.956141206493147*^9, {3.9561422115348396`*^9, 3.9561424946926136`*^9}, {
   3.956142526690853*^9, 3.956142565290846*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d11846f0-c1ef-e349-af65-1ba66cd815b9"],

Cell[BoxData[
 RowBox[{"KillProcess", "/@", 
  RowBox[{"Processes", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.9546966345349045`*^9, 3.9546966520714493`*^9}},
 CellLabel->
  "5/5/25 00:51:12 \
In[23]:=",ExpressionUUID->"b6bae600-20ff-de44-9069-3b219c046062"],

Cell[TextData[StyleBox["More functionalities coming up soon...!",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9561389644217224`*^9, 3.956139127439928*^9}, {
   3.9561391743366547`*^9, 3.956139234447109*^9}, {3.9561392692147484`*^9, 
   3.956139382237385*^9}, {3.9561395692874413`*^9, 3.956139701797125*^9}, {
   3.9561397591370983`*^9, 3.956139762645586*^9}, {3.956139896985924*^9, 
   3.9561400222455177`*^9}, {3.956140064293827*^9, 3.9561401387190876`*^9}, {
   3.9561401700379467`*^9, 3.956140326669159*^9}, {3.9561403597890396`*^9, 
   3.956140403667858*^9}, {3.9561406488795357`*^9, 3.95614081466329*^9}, 
   3.956141206493147*^9, {3.9561422115348396`*^9, 3.9561424946926136`*^9}, {
   3.956142526690853*^9, 3.9561426064134197`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"37dae612-5291-4a44-81bd-8ec60fc96170"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 729.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1. Inherited,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"50bf482a-85ed-8841-9418-f4dc28d4cf4f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 300, 5, 66, "Section",ExpressionUUID->"270ebaa9-ca01-8749-bc5c-b9098f22d531"],
Cell[879, 29, 534, 10, 93, "Text",ExpressionUUID->"1e595848-388f-374d-b884-638c37fd979c"],
Cell[1416, 41, 318, 7, 61, "Input",ExpressionUUID->"3bcbb28a-7a26-7a42-a0d4-5891a63cb0ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1771, 53, 252, 4, 66, "Section",ExpressionUUID->"d7297396-9ecd-9c46-b429-b946319a2fb1"],
Cell[2026, 59, 378, 7, 71, "Text",ExpressionUUID->"84aeeb6e-204c-4840-b1e9-83d11c850eb5"],
Cell[2407, 68, 1013, 24, 80, "Input",ExpressionUUID->"b01f29f9-04bc-f349-904d-807fee2d753b"],
Cell[3423, 94, 262, 5, 49, "Text",ExpressionUUID->"79602380-adcf-bc46-bbb3-3d6ec0ae7187"],
Cell[CellGroupData[{
Cell[3710, 103, 322, 5, 53, "Subsection",ExpressionUUID->"c393de9a-d6ce-784d-902c-d9bbc9120977"],
Cell[4035, 110, 12122, 268, 841, "Input",ExpressionUUID->"4643f6aa-3202-6547-819c-6768ae3b28ae"]
}, Closed]],
Cell[CellGroupData[{
Cell[16194, 383, 318, 5, 37, "Subsection",ExpressionUUID->"3f7ddf40-e4c2-a044-9576-20d81aab1bea"],
Cell[16515, 390, 510, 11, 71, "Text",ExpressionUUID->"617719f1-e963-6c46-9c7d-6cc2bf7a9528"],
Cell[17028, 403, 342, 10, 42, "Input",ExpressionUUID->"fb07aba8-e84f-3347-a55d-6fd9ebf5f6c4"],
Cell[17373, 415, 607, 13, 49, "Text",ExpressionUUID->"caa74d4b-73e6-9c4b-bcaf-4c97d3482aef"],
Cell[17983, 430, 213, 5, 28, "Input",ExpressionUUID->"de89d10c-f6a9-064b-941c-f70305473a1f"],
Cell[18199, 437, 945, 15, 28, "Input",ExpressionUUID->"a4cfb45e-c4b6-8a41-ac8c-3e7a6020bd36"],
Cell[19147, 454, 634, 15, 42, "Input",ExpressionUUID->"1586aa82-e57e-8049-9b8b-f52e384635a8"],
Cell[19784, 471, 532, 11, 71, "Text",ExpressionUUID->"a0a35d88-5fef-2c42-bc4d-9d7008e51e44"],
Cell[20319, 484, 427, 7, 66, "Input",ExpressionUUID->"e0d3eae5-fe35-884c-9ebf-b6389140c34a"],
Cell[20749, 493, 952, 26, 80, "Input",ExpressionUUID->"7e9c7dd9-edc8-0742-a8dc-4e15e7c11fbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21738, 524, 407, 6, 53, "Subsection",ExpressionUUID->"8cadafce-d42a-cf46-9898-2a2fbdd2b657"],
Cell[22148, 532, 1276, 31, 93, "Text",ExpressionUUID->"db6f04fb-1940-6743-bc64-03e7b7262b58"],
Cell[23427, 565, 726, 18, 61, "Input",ExpressionUUID->"fe1b7bc5-0d10-b343-a0a0-21f981cb0055"],
Cell[24156, 585, 659, 12, 49, "Text",ExpressionUUID->"efd63cd2-e38c-a249-bfe4-596389d64b81"],
Cell[24818, 599, 215, 5, 42, "Input",ExpressionUUID->"7e0a77d3-a63f-204d-b207-b4ef62b9e667"],
Cell[CellGroupData[{
Cell[25058, 608, 414, 6, 43, "Subsubsection",ExpressionUUID->"cab5d8ad-05ea-404e-b10f-4be77c319fcd"],
Cell[25475, 616, 2656, 49, 352, "Text",ExpressionUUID->"cb24c219-67aa-fd42-a76a-6013d4888849"],
Cell[28134, 667, 410, 9, 28, "Input",ExpressionUUID->"c4f902a7-37f3-3f4a-a4a6-6be14886ed3d"],
Cell[28547, 678, 442, 10, 28, "Input",ExpressionUUID->"487e044b-c73a-b941-a2c1-92d0ca10cdd4"],
Cell[28992, 690, 1140, 20, 93, "Text",ExpressionUUID->"8431bd3a-b186-0840-8c58-7954600d913d"],
Cell[30135, 712, 591, 11, 28, "Input",ExpressionUUID->"aec10fc5-7b44-474a-891b-3f9ec16d6ae1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30763, 728, 468, 7, 43, "Subsubsection",ExpressionUUID->"a6b3955b-9ce9-bd46-8be9-db83204641e1"],
Cell[31234, 737, 1113, 25, 71, "Text",ExpressionUUID->"20917eaf-94b2-da41-b638-dc106d8d5dc0"],
Cell[32350, 764, 751, 18, 66, "Input",ExpressionUUID->"1617e6a4-3af9-ec4f-91d9-b1d9b72fc60e"],
Cell[33104, 784, 872, 14, 49, "Text",ExpressionUUID->"d11846f0-c1ef-e349-af65-1ba66cd815b9"],
Cell[33979, 800, 261, 6, 42, "Input",ExpressionUUID->"b6bae600-20ff-de44-9069-3b219c046062"],
Cell[34243, 808, 843, 12, 49, "Text",ExpressionUUID->"37dae612-5291-4a44-81bd-8ec60fc96170"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

